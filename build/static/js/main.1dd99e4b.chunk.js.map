{"version":3,"sources":["date.js","services.js","components/ActivityLogForm.jsx","components/ActivityDetailCard.jsx","components/ActivityLogBox.jsx","components/CalculateCalorieForm.jsx","components/UserDetailCard.jsx","components/UserInfoBox.jsx","components/TipsCaraousel.jsx","components/Home.jsx","components/Login.jsx","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","formatDate","date","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","checkSession","fetch","method","catch","Promise","reject","error","then","response","ok","json","ActivityLogForm","userData","updateCallback","cancelCallback","useState","food","calorie","Date","activityInput","setActivityInput","submit","activityError","setActivityError","className","onSubmit","e","preventDefault","type","name","value","onChange","target","undefined","placeholder","role","isNaN","console","log","disabled","onClick","username","activityName","headers","Headers","body","JSON","stringify","updatedData","ActivityDetailCard","displayDate","activityDate","setActivityDate","filterActivities","activities","setActivities","calculateCalorieSum","calorieSum","setCalorieSum","filterDate","info","filter","activity","filteredActivities","map","a","sum","length","reduce","accumulator","currentValue","id","allChecked","checked","sort","b","fa","fb","htmlFor","Object","keys","index","calorieIntake","ActivityLogBox","updateActivityCallback","editMode","params","setParams","CalculateCalorieForm","formCallBack","age","gender","weight","height","calorieFormInput","setCalorieFormInput","formValid","calorieFormErrors","setCalorieFormErrors","useEffect","selected","parseInt","input","calculatedCalorie","UserDetailCard","userInfo","editCallback","UserInfoBox","updateUserCallback","TipsCaraousel","defaultChecked","Home","setUserData","authenticated","err","Login","loginCallBack","setUsername","password","setPassword","isDisabled","setIsDisabled","loginError","setLoginError","to","createSession","userinfo","PrivateRoute","isAuthenticated","Component","component","rest","render","props","pathname","state","from","location","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oHAAAA,EAAOC,QAAQC,WAAa,SAACC,GACzB,IAAIC,EAAQD,EAEZ,OADAC,EAAMC,WAAWD,EAAME,aAAeF,EAAMG,qBACrCH,EAAMI,SAASC,MAAM,EAAG,M,wUCkBtBC,EAAe,WACxB,OAAOC,MAAM,eAAgB,CACzBC,OAAQ,QAEPC,OAAM,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACpCC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,U,uCCgEhDC,MAxFf,YAAwE,IAAD,EAA5CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,eAEjD,EAA0CC,mBAAS,CAAEC,KAAM,GAAIC,QAAS,GAAIxB,KAAMD,qBAAW,IAAI0B,QAAjG,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CL,mBAAS,CAAEC,KAAM,QAASC,QAAS,QAASI,OAAQ,UAA9F,mBAAOC,EAAP,KAAsBC,EAAtB,KAgDA,OACI,sBAAKC,UAAU,mBAAf,UACI,2EACA,sBAAMA,UAAU,gBAAgBC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAjD,SACI,gCACI,kCACI,+BACI,oBAAIH,UAAU,wBAAd,SAAsC,oDACtC,oBAAIA,UAAU,wBAAd,SAAsC,uBAAOI,KAAK,OAAOC,KAAK,OAAOC,MAAOX,EAAcH,KAAMe,SAtDnG,SAACL,GAClB,IAAMV,EAAOU,EAAEM,OAAOF,MAEtB,GADAV,EAAiB,2BAAKD,GAAN,IAAqBH,KAAMA,KAC/B,IAARA,QAAsBiB,GAARjB,EACdO,EAAiB,2BAAKD,GAAN,IAAqBN,KAAM,WAAYK,OAAQ,eAC5D,CACH,IAAIA,EAAS,QACgB,IAAzBC,EAAcL,UACdI,EAAS,IACbE,EAAiB,2BAAKD,GAAN,IAAqBN,KAAM,GAAIK,OAAQA,OA6CiFa,YAAY,gBACpI,qBAAIV,UAAU,wBAAd,UAC4B,aAAvBF,EAAcN,MAAwB,sBAAMmB,KAAK,QAAX,sCACf,gBAAvBb,EAAcN,MAA2B,sBAAMmB,KAAK,QAAX,6FAGlD,+BACI,oBAAIX,UAAU,wBAAd,SAAsC,8CACtC,oBAAIA,UAAU,wBAAd,SAAsC,uBAAOI,KAAK,OAAOC,KAAK,UAAUC,MAAOX,EAAcF,QAASc,SAhDtG,SAACL,GACrB,IAAMT,EAAUS,EAAEM,OAAOF,MAEzB,GADAV,EAAiB,2BAAKD,GAAN,IAAqBF,QAASA,KAC/B,IAAXA,QAA4BgB,GAAXhB,EACjBM,EAAiB,2BAAKD,GAAN,IAAqBL,QAAS,WAAYI,OAAQ,gBAC/D,GAAIe,MAAMnB,GACboB,QAAQC,IAAI,aACZf,EAAiB,2BAAKD,GAAN,IAAqBL,QAAS,iBAAkBI,OAAQ,eACrE,CACH,IAAIA,EAAS,QACa,IAAtBC,EAAcN,OACdK,EAAS,IACbE,EAAiB,2BAAKD,GAAN,IAAqBL,QAAS,GAAII,OAAQA,OAoCuFa,YAAY,qBAC7I,qBAAIV,UAAU,wBAAd,UAC+B,aAA1BF,EAAcL,SAA2B,sBAAMkB,KAAK,QAAX,kCACf,mBAA1Bb,EAAcL,SAAiC,sBAAMkB,KAAK,QAAX,0DAGxD,+BACI,oBAAIX,UAAU,wBAAd,SAAsC,2CACtC,oBAAIA,UAAU,wBAAd,SAAsC,0BAAOI,KAAK,OAAOC,KAAK,OAAOC,MAAOX,EAAc1B,MAApD,sBAAiE0B,EAAc1B,MAA/E,0BAxCzC,SAACiC,GAClBW,QAAQC,IAAInB,EAAc1B,MAC1B2B,EAAiB,2BAAKD,GAAN,IAAqB1B,KAAMiC,EAAEM,OAAOF,YAsCM,SAE1C,+BACI,oBAAIN,UAAU,wBAAd,SAAsC,wBAAQA,UAAmC,IAAxBF,EAAcD,OAAe,eAAiB,mBAAoBkB,SAAkC,IAAxBjB,EAAcD,OAAe,GAAK,WAAYmB,QArCvL,WD0BM,IAACC,EAAUC,EAAczB,EAASxB,ECzB9B,IAAtB6B,EAAcN,MAAuC,IAAzBM,EAAcL,SDyBvBwB,ECxBJ7B,EAAS6B,SDwBKC,ECxBKvB,EAAcH,KDwBLC,ECxBWE,EAAcF,QDwBhBxB,ECxByB0B,EAAc1B,KDyB5FQ,MAAM,gBAAiB,CAC1BC,OAAQ,OACRyC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,qBAEpBC,KAAMC,KAAKC,UAAU,CACjBL,aAAcA,EACdzB,QAASA,EACTxB,KAAMA,EACNgD,SAAUA,MAGbtC,OAAM,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACpCC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,UC1C8CH,MAC7F,SAAAyC,GAAW,OAAInC,EAAemC,EAAa7B,EAAc1B,SAG7D4C,QAAQC,IAAI,oBA+B0C,sBACtC,oBAAId,UAAU,wBAAd,SAAsC,wBAAQA,UAAU,kBAAkBgB,QAAS1B,EAA7C,oC,MCUnDmC,MA5Ff,YAAwD,IAA1BrC,EAAyB,EAAzBA,SAAUsC,EAAe,EAAfA,YAEpC,EAAwCnC,mBAASmC,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCrC,mBAASsC,EAAiBH,IAA9D,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAoCxC,mBAASyC,EAAoBN,IAAjE,mBAAOO,EAAP,KAAmBC,EAAnB,KAEA,SAASL,EAAiBM,GACtB,OAAO/C,EAASgD,KAAKN,WAAWO,QAAO,SAAAC,GAAQ,OAAIA,EAASrE,MAAQkE,KAGxE,SAASH,EAAoB/D,GACzB,IACMsE,EAAqBnD,EAASgD,KAAKN,WAAWO,QAAO,SAAAC,GAAQ,OAAIA,EAASrE,MAAQA,KACnFuE,KAAI,SAAAC,GAAC,OAAIA,EAAEhD,WACZiD,EAAM,EAIV,OAHiC,GAA7BH,EAAmBI,SACnBD,EAAMH,EAAmBK,QALb,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,MAOtDJ,EA4BX,OACI,sBAAK1C,UAAU,2BAAf,UACI,6EADJ,IACyD,uBACrD,gDACA,uBAAOI,KAAK,OAAOC,KAAK,gBAAgBC,MAAOqB,EAAcpB,SAVhD,SAACL,GAClB0B,EAAgB1B,EAAEM,OAAOF,OACzByB,EAAcF,EAAiB3B,EAAEM,OAAOF,QACxC4B,EAAcF,EAAoB9B,EAAEM,OAAOF,WAQvC,uBAAOF,KAAK,WAAW2C,GAAG,MAAM1C,KAAK,MAAMC,MAAM,MAAMC,SA7BzC,SAACL,GACnB,IAAM8C,EAAc9C,EAAEM,OAAOyC,QAEzBlB,EADAiB,EACc5D,EAASgD,KAAKN,WAAWoB,MAAK,SAACT,EAAGU,GAC5C,IAAIC,EAAKX,EAAExE,KAAMoF,EAAKF,EAAElF,KACxB,OAAImF,EAAKC,EACE,EAEPD,EAAKC,GACG,EAEL,KAGGxB,EAAiBH,OAgB/B,uBAAO4B,QAAQ,MAAf,sBAAqC,uBACrC,qBAAKtD,UAAU,qBAAf,SACI,wBAAOA,UAAU,iBAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,sBAAd,kBACA,oBAAIA,UAAU,sBAAd,sBACA,oBAAIA,UAAU,sBAAd,uBAGR,gCACKuD,OAAOC,KAAK1B,GAAYU,KAAI,SAACF,EAAUmB,GAAX,OAEzB,qBAAIzD,UAAU,qBAAd,UACI,oBAAIA,UAAU,wBAAd,SACK8B,EAAWQ,GAAUpB,eAE1B,6BACKY,EAAWQ,GAAU7C,UAE1B,6BACKqC,EAAWQ,GAAUrE,SARUwF,aAiBxD,sBAAKzD,UAAU,mBAAf,UACI,mHACI,sBAAMA,UAAYZ,EAASgD,KAAKsB,cAAgBzB,GAAe,EAAI,0BAA4B,wBAA/F,SACK7C,EAASgD,KAAKsB,cAAgBzB,IAFvC,eAGA,sJCtDD0B,MA7Bf,YAA+D,IAArCvE,EAAoC,EAApCA,SAAUwE,EAA0B,EAA1BA,uBAEhC,EAA4BrE,mBAAS,CAAEsE,UAAU,EAAOnC,YAAa1D,qBAAW,IAAI0B,QAApF,mBAAOoE,EAAP,KAAeC,EAAf,KAeA,OACI,sBAAK/D,UAAU,uBAAf,WACOZ,EAASgD,KAAKsB,gBAAkBtE,EAASgD,KAAKN,YAAegC,EAAOD,WAAa,cAAC,EAAD,CAAiBzE,SAAUA,EAAUC,eAfxG,SAACmC,EAAavD,GACnC8F,EAAU,2BAAKD,GAAN,IAAcD,UAAU,EAAOnC,YAAazD,KACrD2F,EAAuBpC,IAawIlC,eAN9I,WACjByE,EAAU,2BAAKD,GAAN,IAAcD,UAAU,QAM5BzE,EAASgD,KAAKsB,eAAiBtE,EAASgD,KAAKN,aAAegC,EAAOD,UAAY,cAC5E,EAD4E,CACzDzE,SAAUA,EAAUsC,YAAaoC,EAAOpC,cAC/D,qBAAK1B,UAAU,2BAAf,SACKZ,EAASgD,KAAKN,YAAc1C,EAASgD,KAAKsB,gBAAkBI,EAAOD,UAAY,wBAAQ7D,UAAU,mBAAmBgB,QAd3G,WAClB+C,EAAU,2BAAKD,GAAN,IAAcD,UAAU,MAauD,0C,YC6HjFG,MArJf,YAAmF,IAAnD5E,EAAkD,EAAlDA,SAAU6E,EAAwC,EAAxCA,aAAc3E,EAA0B,EAA1BA,eAAgBwE,EAAU,EAAVA,OAEpE,EAAgDvE,mBAAS,CAAE2E,IAAK,GAAIC,OAAQ,OAAQC,OAAQ,GAAIC,OAAQ,KAAxG,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkDhF,oBAElD,WACI,OAAKuE,EAAOU,UAGD,CAAEN,IAAK,GAAIE,OAAQ,GAAIC,OAAQ,GAAIxE,OAAQ,IAF3C,CAAEqE,IAAK,QAASE,OAAQ,QAASC,OAAQ,QAASxE,OAAQ,YAJzE,mBAAO4E,EAAP,KAA0BC,EAA1B,KAwFA,OA9EAC,qBAAU,WACFvF,EAASgD,KAAKsB,eACda,EACI,CACIL,IAAK9E,EAASgD,KAAK8B,IACnBC,OAAQ/E,EAASgD,KAAK+B,OACtBC,OAAQhF,EAASgD,KAAKgC,OACtBC,OAAQjF,EAASgD,KAAKiC,WAInC,CAACjF,IAoEA,sBAAKY,UAAU,wBAAf,UACI,iIACA,sBAAMA,UAAU,yBAAyBC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAA1D,SACI,gCAAO,kCACH,+BACI,6BAAI,2CACJ,+BAAI,uBAAOC,KAAK,OAAOC,KAAK,MAAME,SAxElC,SAACL,GACjB,IAAMgE,EAAMhE,EAAEM,OAAOF,MAErB,GADAiE,EAAoB,2BAAKD,GAAN,IAAwBJ,IAAKA,KACrC,IAAPA,QAAoBzD,GAAPyD,EACbQ,EAAqB,2BAAKD,GAAN,IAAyBP,IAAK,WAAYrE,OAAQ,gBACnE,GAAIe,MAAMsD,IAAQA,EAAM,IAAMA,EAAM,IACvCQ,EAAqB,2BAAKD,GAAN,IAAyBP,IAAK,aAAcrE,OAAQ,eACrE,CACH,IAAIA,EAAS,QACmB,IAA5B4E,EAAkBJ,QAA4C,IAA5BI,EAAkBL,SACpDvE,EAAS,IAEb6E,EAAqB,2BAAKD,GAAN,IAAyBP,IAAK,GAAIrE,OAAQA,OA4DOa,YAAY,MAAMJ,MAAOgE,EAAiBJ,MAAa,0BAChH,qBAAIlE,UAAU,+BAAd,UAAwE,aAA1ByE,EAAkBP,KAC5D,sBAAMvD,KAAK,QAAX,6BAE2B,eAA1B8D,EAAkBP,KACf,sBAAMvD,KAAK,QAAX,mDAIZ,+BACI,6BAAI,+CACJ,+BAAI,yBAAQJ,SAnET,SAACL,GACpB,IAAMiE,EAASjE,EAAEM,OAAOF,MACxBO,QAAQC,IAAIZ,EAAEM,OAAOF,OACrBiE,EAAoB,2BAAKD,GAAN,IAAwBH,OAAQA,MAgE/B,UACA,wBAAQ7D,MAAM,OAAOsE,SAAqC,QAA3BN,EAAiBH,QAAmB,OAAnE,kBACA,wBAAQ7D,MAAM,SAASsE,SAAqC,UAA3BN,EAAiBH,QAAqB,SAAvE,uBACK,0BAET,0BAEJ,+BACI,6BAAI,sDACJ,mCAAK,uBAAO/D,KAAK,OAAOC,KAAK,SAASK,YAAY,cAAcH,SAtE7D,SAACL,GAEpB,IAAMkE,EAASlE,EAAEM,OAAOF,MAExB,GADAiE,EAAoB,2BAAKD,GAAN,IAAwBF,OAAQA,KACrC,IAAVA,QAA0B3D,GAAV2D,EAChBM,EAAqB,2BAAKD,GAAN,IAAyBL,OAAQ,WAAYvE,OAAQ,gBACtE,GAAIe,MAAMwD,IAAWS,SAAST,GAAU,GAAKS,SAAST,GAAU,IACnEvD,QAAQC,IAAI,eACZ4D,EAAqB,2BAAKD,GAAN,IAAyBL,OAAQ,gBAAiBvE,OAAQ,eAC3E,CACHgB,QAAQC,IAAI,aACZ,IAAIjB,EAAS,QACmB,IAA5B4E,EAAkBJ,QAAyC,IAAzBI,EAAkBP,MACpDrE,EAAS,IAEb6E,EAAqB,2BAAKD,GAAN,IAAyBL,OAAQ,GAAIvE,OAAQA,OAuDqCS,MAAOgE,EAAiBF,SAAgB,0BAClI,qBAAIpE,UAAU,gCAAd,cAA6E,aAA7ByE,EAAkBL,QAC9D,sBAAMzD,KAAK,IAAX,gCAE8B,kBAA7B8D,EAAkBL,QACf,sBAAMzD,KAAK,QAAX,+DAGZ,+BACI,6BAAI,8CACJ,+BAAI,uBAAOP,KAAK,OAAOC,KAAK,SAASK,YAAY,cAAcH,SA7D5D,SAACL,GACpB,IAAMmE,EAASnE,EAAEM,OAAOF,MAExB,GADAiE,EAAoB,2BAAKD,GAAN,IAAwBD,OAAQA,KACrC,IAAVA,QAA0B5D,GAAV4D,EAChBK,EAAqB,2BAAKD,GAAN,IAAyBJ,OAAQ,WAAYxE,OAAQ,gBACtE,GAAIe,MAAMyD,IAAWQ,SAASR,GAAU,IAAMQ,SAASR,GAAU,IACpEK,EAAqB,2BAAKD,GAAN,IAAyBJ,OAAQ,gBAAiBxE,OAAQ,eAC3E,CACH,IAAIA,EAAS,QACmB,IAA5B4E,EAAkBL,QAAyC,IAAzBK,EAAkBP,MACpDrE,EAAS,IAEb6E,EAAqB,2BAAKD,GAAN,IAAyBJ,OAAQ,GAAIxE,OAAQA,OAiDoCS,MAAOgE,EAAiBD,SAAgB,0BACjI,qBAAIrE,UAAU,+BAAd,UAA2E,aAA7ByE,EAAkBJ,QAC5D,sBAAM1D,KAAK,IAAX,gCAE8B,kBAA7B8D,EAAkBJ,QACf,sBAAM1D,KAAK,QAAX,sDAIZ,+BACI,mCAAK,wBAAQX,UAAuC,IAA5ByE,EAAkB5E,OAAe,wBAA0B,sBAAuBO,KAAK,SAASE,MAAM,SAASS,SAAsC,IAA5B0D,EAAkB5E,OAAe,GAAK,WAAYmB,QAvDvL,WJxCH,IAACC,EAAU6D,EIyCP,IAAzBL,EAAkBP,KAAyC,IAA5BO,EAAkBL,QAA4C,IAA5BK,EAAkBJ,SJzC7DpD,EI0CJ7B,EAAS6B,SJ1CK6D,EI0CKR,EJzCtC7F,MAAM,gBAAiB,CAC1BC,OAAQ,OACRyC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,qBAEpBC,KAAMC,KAAKC,UAAU,CACjBN,SAAUA,EACVmD,OAAQU,EAAMV,OACdC,OAAQS,EAAMT,OACdH,IAAKY,EAAMZ,IACXC,OAAQW,EAAMX,WAIjBxF,OAAM,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACpCC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,UIsBIH,MAAK,SAAAgG,GACxDd,EAAa,CAAE7B,KAAM2C,QAoDR,uBACL,6BAAK,wBAAQ/E,UAAU,yBAAyBI,KAAK,SAASY,QAAS1B,EAAlE,oC,MC9Fd0F,MAhDf,YAAqD,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAEhC,OACI,sBAAKlF,UAAU,oBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,6CACA,gCAEI,kCAEI,qBAAIA,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,mBAA6C,oBAAIA,UAAU,qBAAd,SAAqCiF,EAASf,SAE/F,qBAAIlE,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,sBAAgD,oBAAIA,UAAU,qBAAd,SAAqCiF,EAASZ,YAElG,qBAAIrE,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,sBAAgD,oBAAIA,UAAU,qBAAd,SAAoCiF,EAASb,YAEjG,qBAAIpE,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,sBAAgD,oBAAIA,UAAU,qBAAd,SAAoCiF,EAASd,YAEjG,qBAAInE,UAAU,kBAAd,UACI,oBAAIA,UAAU,qBAAd,8BAAwD,oBAAIA,UAAU,qBAAd,SAAoCiF,EAASvB,mBAEzG,6BACI,6BAAK,wBAAQ1D,UAAU,uBAAuBgB,QAASkE,EAAlD,8BAKrB,sBAAKlF,UAAU,mCAAf,UACI,mFAEA,uBAAM,uBAEN,0GALJ,IAKwF,uBALxF,IAK+F,uBAE3F,4GAPJ,IAO0F,uBACtF,uBAAM,uBACN,0L,MCSDmF,MA5Cf,YAAwD,IAAjC/F,EAAgC,EAAhCA,SAAUgG,EAAsB,EAAtBA,mBAE7B,EAA4B7F,mBAAS,CAAEsE,UAAU,EAAOW,WAAW,IAAnE,mBAAOV,EAAP,KAAeC,EAAf,KAmBA,OACI,sBAAK/D,UAAU,qBAAf,UAEKZ,EAASgD,OAAShD,EAASgD,KAAKsB,gBAAkBI,EAAOD,UACtD,sBAAK7D,UAAU,oBAAf,UACI,gIAIA,wBAAQA,UAAU,6BAA6BgB,QArB3C,WAChB+C,EAAU,2BAAKD,GAAN,IAAcD,UAAU,EAAMW,WAAW,MAoBtC,yCAIPV,EAAOD,UAAY,cAAC,EAAD,CAAsBzE,SAAUA,EAAU6E,aA9B/C,SAACzC,GACpBuC,EAAU,2BAAKD,GAAN,IAAcD,UAAU,KACjCuB,EAAmB5D,IA4B6ElC,eAjB/E,WACjByE,EAAU,2BAAKD,GAAN,IAAcD,UAAU,MAgB6FC,OAAQA,IAEjI1E,EAASgD,MAAQhD,EAASgD,KAAKsB,gBAAkBI,EAAOD,UAAY,cAAC,EAAD,CAAgBoB,SAAU7F,EAASgD,KAAM8C,aAvBrG,WACbnB,EAAU,2BAAKD,GAAN,IAAcD,UAAU,EAAMW,WAAW,Y,MCuB3Ca,MA1Cf,WAEI,OACI,sBAAKrF,UAAU,YAAf,UACI,uBAAOI,KAAK,QAAQC,KAAK,SAAS0C,GAAG,UAAUuC,gBAAc,IAC7D,uBAAOlF,KAAK,QAAQC,KAAK,SAAS0C,GAAG,YACrC,uBAAO3C,KAAK,QAAQC,KAAK,SAAS0C,GAAG,YACrC,uBAAO3C,KAAK,QAAQC,KAAK,SAAS0C,GAAG,YACrC,qBAAI/C,UAAU,SAAd,UACI,oBAAIA,UAAU,QAAd,SACI,4BACI,0EAGR,oBAAIA,UAAU,QAAd,SACI,4BACI,8DAIR,oBAAIA,UAAU,QAAd,SACI,4BACI,6DAGR,oBAAIA,UAAU,QAAd,SACI,4BACI,yEAIZ,sBAAKA,UAAU,mBAAf,UACI,uBAAOsD,QAAQ,UAAUP,GAAG,kBAC5B,uBAAOO,QAAQ,UAAUP,GAAG,kBAC5B,uBAAOO,QAAQ,UAAUP,GAAG,kBAC5B,uBAAOO,QAAQ,UAAUP,GAAG,yBCqB7BwC,MAjDf,YAA0C,IAA1BnG,EAAyB,EAAzBA,SAAUoG,EAAe,EAAfA,YAoBtB,OACI,cAAC,IAAD,UACI,gCAEI,sBAAKxF,UAAU,uBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,2CAAcZ,EAAS6B,SAAvB,SAEJ,qBAAKjB,UAAU,gBAAf,6BACA,qBAAKA,UAAU,iBAAf,SACI,wBAAQA,UAAU,aAAagB,QA5BpC,WRyBRvC,MAAM,eAAgB,CACzBC,OAAQ,WAEPC,OAAM,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACpCC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,SQ/BlDH,MAAK,SAAAC,GACFwG,EAAY,CAAEC,eAAe,EAAOxE,SAAU,QAEjDtC,OAAM,SAAA+G,GACH7E,QAAQC,IAAI4E,OAsBJ,0BAGR,qBAAK1F,UAAU,sBAAf,SACI,kDAEJ,cAAC,EAAD,IAEA,cAAC,EAAD,CAAaZ,SAAUA,EAAUgG,mBA1BtB,SAAC5D,GACpBgE,EAAY,2BAAKpG,GAAN,IAAgBgD,KAAMZ,EAAYY,WA2BrC,cAAC,EAAD,CAAgBhD,SAAUA,EAAUwE,uBAxBrB,SAACpC,GACxBgE,EAAY,2BAAKpG,GAAN,IAAgBgD,KAAMZ,c,aCiD1BmE,MApEf,YAA6C,IAA5BvG,EAA2B,EAA3BA,SAAUwG,EAAiB,EAAjBA,cAEvB,EAAgCrG,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiB4E,EAAjB,KACA,EAAgCtG,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAoCxG,oBAAS,GAA7C,mBAAOyG,EAAP,KAAmBC,EAAnB,KACA,EAAoC1G,mBAAS,IAA7C,mBAAO2G,EAAP,KAAmBC,EAAnB,KAoCA,OAlCAxB,qBAAU,WACNnG,IAAeO,MAAK,SAACkG,GACjBpE,QAAQC,IAAImE,GACP7F,EAASqG,eACVG,EAAc,CAAEH,eAAe,EAAMxE,SAAUgE,EAAShE,SAAUmB,KAAM6C,EAAS7C,UAGpFzD,OAAM,SAAAG,GACH+B,QAAQC,IAAIhC,QAErB,CAACM,IAwBAA,EAASqG,cACF,cAAC,IAAD,CAAUW,GAAG,MAKpB,sBAAKpG,UAAU,iBAAf,UACI,qBAAKA,UAAU,oBAEf,iDACA,qBAAKA,UAAU,iBAAf,SACI,uBAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAAvB,UACI,uCACA,gCAAO,2CACP,uBAAOC,KAAK,OAAOG,SApCV,SAACL,GACtB2F,EAAY3F,EAAEM,OAAOF,OACrB2F,GAAe/F,EAAEM,OAAOF,QAkCmCI,YAAY,iBAAiBL,KAAK,aAAmB,uBACpG,gCAAO,2CACP,uBAAOD,KAAK,WAAWG,SAjCd,SAACL,GACtBW,QAAQC,IAAIZ,EAAEM,OAAOF,OACrByF,EAAY7F,EAAEM,OAAOF,QA+B0CI,YAAY,iBAAiBL,KAAK,aAAmB,uBACxG,wBAAQL,UAAU,YAAYgB,QA5BhC,YTlCW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAU6E,EAAe,EAAfA,SAEtC,OAAOrH,MAAM,eAAgB,CACzBC,OAAQ,OACRyC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,qBAEpBC,KAAMC,KAAKC,UAAU,CAAEN,WAAU6E,eAEhCnH,OAAM,kBAAMC,QAAQC,OAAO,CAAEC,MAAO,qBACpCC,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbF,EAASE,OAAOH,MAAK,SAAAG,GAAI,OAAIN,QAAQC,OAAOK,USqBvDmH,CAAc,CAAEpF,WAAU6E,aACrB/G,MAAK,SAAAuH,GACFV,EAAc,CAAEH,eAAe,EAAMxE,SAAUA,EAAUmB,KAAMkE,EAASlE,UAE3EzD,OAAM,SAAA+G,GACHS,EAAcT,GACd7E,QAAQC,IAAI4E,OAqBsC3E,SAAUiF,EAAxD,qBACA,qBAAKhG,UAAU,mBAAf,SAAmCkG,a,QChDxCK,MAdf,YAA2E,IAAnDC,EAAkD,EAAlDA,gBAA4BC,EAAsB,EAAjCC,UAAyBC,EAAQ,+CACtE,OAEI,cAAC,IAAD,2BAAWA,GAAX,IAAiBC,OAAQ,SAACC,GAAD,OACD,IAApBL,EACM,cAACC,EAAD,eAAeI,IACf,cAAC,IAAD,CAAUT,GAAI,CACZU,SAAU,SACVC,MAAO,CAAEC,KAAMH,EAAMI,kBCiC1BC,MAhCf,WAEE,MAAgC3H,mBAAS,CAAEkG,eAAe,EAAOxE,SAAU,GAAImB,KAAM,KAArF,mBAAOhD,EAAP,KAAiBoG,EAAjB,KAaA,OAXAb,qBAAU,WACRnG,IAAeO,MAAK,SAACkG,GACd7F,EAASqG,eACZD,EAAY,CAAEC,eAAe,EAAMxE,SAAUgE,EAAShE,SAAUmB,KAAM6C,EAAS7C,UAGhFzD,OAAM,SAAAG,GACL+B,QAAQC,IAAIhC,QAEf,CAACM,IAGF,qBAAKY,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,SAASV,UAAW,kBAAM,cAAC,EAAD,CAAOtH,SAAUA,EAAUwG,cAAeJ,OACtF,cAAC,EAAD,CAAc4B,KAAK,aAAaZ,gBAAiBpH,EAASqG,cACxDiB,UAAW,kBAAM,cAAC,EAAD,CAAMtH,SAAUA,EAAUoG,YAAaA,OAC1D,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUD,OAAK,EAACH,KAAK,IAAIZ,GAAG,gBAE9B,cAAC,IAAD,CAAOgB,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUJ,KAAK,IAAIZ,GAAG,sBC1BjBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxI,MAAK,YAAkD,IAA/CyI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASjB,OACP,cAAC,IAAMkB,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1dd99e4b.chunk.js","sourcesContent":["module.exports.formatDate = (date) => {\n    let local = date;\n    local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\n    return local.toJSON().slice(0, 10);\n};","\n\n//Creating Users session\nexport const createSession = ({ username, password }) => {\n\n    return fetch('/api/session', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({ username, password }),\n    })\n        .catch(() => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then(json => Promise.reject(json));\n        });\n};\n\nexport const checkSession = () => {\n    return fetch('/api/session', {\n        method: 'GET',\n    })\n        .catch(() => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n            return response.json().then(json => Promise.reject(json));\n        });\n};\n\n\nexport const endSession = () => {\n    return fetch('/api/session', {\n        method: 'DELETE',\n    })\n        .catch(() => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then(json => Promise.reject(json));\n        });\n};\n\nexport const calculateCalories = (username, input) => {\n    return fetch('/api/calories', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({\n            username: username,\n            weight: input.weight,\n            height: input.height,\n            age: input.age,\n            gender: input.gender\n        }),\n\n    })\n        .catch(() => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then(json => Promise.reject(json));\n        })\n}\n\n\nexport const createActivity = (username, activityName, calorie, date) => {\n    return fetch('/api/activity', {\n        method: 'POST',\n        headers: new Headers({\n            'content-type': 'application/json',\n        }),\n        body: JSON.stringify({\n            activityName: activityName,\n            calorie: calorie,\n            date: date,\n            username: username\n        }),\n    })\n        .catch(() => Promise.reject({ error: 'network-error' }))\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return response.json().then(json => Promise.reject(json));\n        })\n}\n\n","import React, { useState } from \"react\";\nimport '../css/activity-log-form.css'\nimport { formatDate } from '../date.js'\nimport { createActivity } from '../services.js'\n\n\nfunction ActivityLogForm({ userData, updateCallback, cancelCallback }) {\n\n    const [activityInput, setActivityInput] = useState({ food: \"\", calorie: \"\", date: formatDate(new Date()) })\n    const [activityError, setActivityError] = useState({ food: \"error\", calorie: \"error\", submit: \"error\" });\n\n    const onFoodChange = (e) => {\n        const food = e.target.value;\n        setActivityInput({ ...activityInput, food: food })\n        if (food == \"\" || food == undefined) {\n            setActivityError({ ...activityError, food: \"required\", submit: \"error\" })\n        } else {\n            let submit = \"error\"\n            if (activityError.calorie == \"\")\n                submit = \"\"\n            setActivityError({ ...activityError, food: \"\", submit: submit })\n        }\n    }\n\n\n    const onCalorieChange = (e) => {\n        const calorie = e.target.value;\n        setActivityInput({ ...activityInput, calorie: calorie })\n        if (calorie == \"\" || calorie == undefined) {\n            setActivityError({ ...activityError, calorie: \"required\", submit: \"error\" })\n        } else if (isNaN(calorie)) {\n            console.log(\"helo eror\")\n            setActivityError({ ...activityError, calorie: \"invalidCalorie\", submit: \"error\" })\n        } else {\n            let submit = \"error\"\n            if (activityError.food == \"\")\n                submit = \"\"\n            setActivityError({ ...activityError, calorie: \"\", submit: submit })\n        }\n    }\n\n    const onDateChange = (e) => {\n        console.log(activityInput.date)\n        setActivityInput({ ...activityInput, date: e.target.value })\n    }\n\n\n    const addActivity = () => {\n        if (activityError.food == \"\" && activityError.calorie == \"\") {\n            createActivity(userData.username, activityInput.food, activityInput.calorie, activityInput.date).then(\n                updatedData => updateCallback(updatedData, activityInput.date)\n            )\n        } else {\n            console.log(\"Errors in Input\")\n        }\n    }\n\n    return (\n        <div className=\"add-activity-div\">\n            <h2>Add Meal To Calculate Calorie Consumption</h2>\n            <form className=\"add-meal-form\" onSubmit={e => e.preventDefault()}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td className=\"add-meal-form-coloumn\"><label>Item Consumed</label></td>\n                            <td className=\"add-meal-form-coloumn\"><input type=\"text\" name=\"food\" value={activityInput.food} onChange={onFoodChange} placeholder=\"ex: apple\"></input></td>\n                            <td className=\"add-meal-form-coloumn\">\n                                {activityError.food === \"required\" && (<span role=\"error\"> Food intake is required</span>)}\n                                {activityError.food === \"invalidFood\" && (<span role=\"error\"> Food intake should be of atleast 2 letters and contain character A-Z,a-z</span>)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"add-meal-form-coloumn\"><label>Calorie</label></td>\n                            <td className=\"add-meal-form-coloumn\"><input type=\"text\" name=\"calorie\" value={activityInput.calorie} onChange={onCalorieChange} placeholder=\"calorie-intake\"></input></td>\n                            <td className=\"add-meal-form-coloumn\">\n                                {activityError.calorie === \"required\" && (<span role=\"error\"> Calorie is required</span>)}\n                                {activityError.calorie === \"invalidCalorie\" && (<span role=\"error\"> Calorie should be a numeric value 0-9</span>)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td className=\"add-meal-form-coloumn\"><label>Date</label></td>\n                            <td className=\"add-meal-form-coloumn\"><input type=\"date\" name=\"date\" value={activityInput.date} value={activityInput.date} onChange={onDateChange} /></td>\n                        </tr>\n                        <tr>\n                            <td className=\"add-meal-form-coloumn\"><button className={activityError.submit == \"\" ? \"add-meal-btn\" : \"disable-meal-btn\"} disabled={activityError.submit == \"\" ? \"\" : \"disabled\"} onClick={addActivity}>Submit</button></td>\n                            <td className=\"add-meal-form-coloumn\"><button className=\"cancel-meal-btn\" onClick={cancelCallback}>Cancel</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </form>\n        </div >\n    )\n}\n\nexport default ActivityLogForm","import { useState } from 'react';\nimport '../css/activity-detail-card.css'\n\nfunction ActivityDetailCard({ userData, displayDate }) {\n\n    const [activityDate, setActivityDate] = useState(displayDate);\n    const [activities, setActivities] = useState(filterActivities(displayDate))\n    const [calorieSum, setCalorieSum] = useState(calculateCalorieSum(displayDate))\n\n    function filterActivities(filterDate) {\n        return userData.info.activities.filter(activity => activity.date == filterDate)\n    }\n\n    function calculateCalorieSum(date) {\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        const filteredActivities = userData.info.activities.filter(activity => activity.date == date)\n            .map(a => a.calorie)\n        let sum = 0\n        if (filteredActivities.length != 0) {\n            sum = filteredActivities.reduce(reducer)\n        }\n        return sum;\n    }\n\n\n    const checkboxClick = (e) => {\n        const allChecked = (e.target.checked)\n        if (allChecked) {\n            setActivities(userData.info.activities.sort((a, b) => {\n                let fa = a.date, fb = b.date;\n                if (fa < fb) {\n                    return 1;\n                }\n                if (fa > fb) {\n                    return -1;\n                }\n                return 0;\n            }))\n        } else {\n            setActivities(filterActivities(displayDate))\n        }\n    }\n\n    const onDateChange = (e) => {\n        setActivityDate(e.target.value)\n        setActivities(filterActivities(e.target.value))\n        setCalorieSum(calculateCalorieSum(e.target.value))\n    }\n\n    return (\n        <div className=\"activity-detail-main-div\">\n            <h2>Check Calorie Consumption For Selected Date</h2> <br />\n            <label>Select Date</label>\n            <input type=\"date\" name=\"activity-date\" value={activityDate} onChange={onDateChange} />\n            <input type=\"checkbox\" id=\"all\" name=\"all\" value=\"ALL\" onChange={checkboxClick} />\n            <label htmlFor=\"all\">Show All</label><br></br>\n            <div className=\"activity-table-div\">\n                <table className=\"activity-table\">\n                    <thead>\n                        <tr >\n                            <th className=\"activity-table-head\">Meal</th>\n                            <th className=\"activity-table-head\">Calories</th>\n                            <th className=\"activity-table-head\">Date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(activities).map((activity, index) => (\n\n                            <tr className=\"activity-table-row\" key={index}>\n                                <td className=\"activity-table-column\">\n                                    {activities[activity].activityName}\n                                </td>\n                                <td>\n                                    {activities[activity].calorie}\n                                </td>\n                                <td>\n                                    {activities[activity].date}\n                                </td>\n\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n            </div>\n            <div className=\"calorie-diff-div\">\n                <h2>Your Calorie difference (Ideal Calorie Intake for your body - Calorie Consumed) =\n                    <span className={(userData.info.calorieIntake - calorieSum) >= 0 ? \"calorie-diff-span-green\" : \"calorie-diff-span-red\"}>\n                        {userData.info.calorieIntake - calorieSum}</span> Calories</h2>\n                <i> If the calorie difference is positive it means you have consumed less calories than your daily intake level  </i>\n            </div>\n        </div >\n    )\n}\n\nexport default ActivityDetailCard;","import React, { useState } from \"react\";\nimport '../css/activity-log-box.css'\nimport ActivityLogForm from './ActivityLogForm'\nimport ActivityDetailCard from './ActivityDetailCard'\nimport { formatDate } from '../date.js'\n\nfunction ActivityLogBox({ userData, updateActivityCallback }) {\n\n    const [params, setParams] = useState({ editMode: false, displayDate: formatDate(new Date()) });\n\n    const updateActivities = (updatedData, date) => {\n        setParams({ ...params, editMode: false, displayDate: date })\n        updateActivityCallback(updatedData)\n    }\n\n    const onAddActivity = () => {\n        setParams({ ...params, editMode: true })\n    }\n\n    const cancelAction = () => {\n        setParams({ ...params, editMode: false })\n    }\n\n    return (\n        <div className=\"activity-log-box-div\">\n            {((userData.info.calorieIntake && !userData.info.activities) || params.editMode) && <ActivityLogForm userData={userData} updateCallback={updateActivities} cancelCallback={cancelAction} />}\n            {userData.info.calorieIntake && userData.info.activities && !params.editMode && <\n                ActivityDetailCard userData={userData} displayDate={params.displayDate} />}\n            <div className=\"activity-log-box-btn-div\">\n                {userData.info.activities && userData.info.calorieIntake && !params.editMode && <button className=\"add-activity-btn\" onClick={onAddActivity}> Add Meal Consumption </button>}\n            </div>\n        </div>\n    )\n}\n\nexport default ActivityLogBox;","import \"../css/calorie-calculator-form.css\";\nimport { calculateCalories } from \"../services\";\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nfunction CalculateCalorieForm({ userData, formCallBack, cancelCallback, params }) {\n\n    const [calorieFormInput, setCalorieFormInput] = useState({ age: \"\", gender: \"MALE\", weight: \"\", height: \"\" });\n    const [calorieFormErrors, setCalorieFormErrors] = useState(getInitialErrorState);\n\n    function getInitialErrorState() {\n        if (!params.formValid) {\n            return { age: \"error\", weight: \"error\", height: \"error\", submit: \"error\" }\n        } else {\n            return { age: \"\", weight: \"\", height: \"\", submit: \"\" }\n        }\n    }\n\n    useEffect(() => {\n        if (userData.info.calorieIntake) {\n            setCalorieFormInput(\n                {\n                    age: userData.info.age,\n                    gender: userData.info.gender,\n                    weight: userData.info.weight,\n                    height: userData.info.height\n                }\n            )\n        }\n    }, [userData])\n\n    const onAgeChange = (e) => {\n        const age = e.target.value;\n        setCalorieFormInput({ ...calorieFormInput, age: age });\n        if (age == \"\" || age == undefined) {\n            setCalorieFormErrors({ ...calorieFormErrors, age: \"required\", submit: \"error\" });\n        } else if (isNaN(age) || age < 10 || age > 200) {\n            setCalorieFormErrors({ ...calorieFormErrors, age: \"invalidAge\", submit: \"error\" });\n        } else {\n            let submit = \"error\";\n            if (calorieFormErrors.height == \"\" && calorieFormErrors.weight == \"\") {\n                submit = \"\"\n            }\n            setCalorieFormErrors({ ...calorieFormErrors, age: \"\", submit: submit })\n        }\n    }\n\n    const onGenderChange = (e) => {\n        const gender = e.target.value;\n        console.log(e.target.value)\n        setCalorieFormInput({ ...calorieFormInput, gender: gender });\n    }\n\n    const onWeightChange = (e) => {\n\n        const weight = e.target.value;\n        setCalorieFormInput({ ...calorieFormInput, weight: weight });\n        if (weight == \"\" || weight == undefined) {\n            setCalorieFormErrors({ ...calorieFormErrors, weight: \"required\", submit: \"error\" });\n        } else if (isNaN(weight) || parseInt(weight) < 1 || parseInt(weight) > 500) {\n            console.log(\"over weight\")\n            setCalorieFormErrors({ ...calorieFormErrors, weight: \"invalidWeight\", submit: \"error\" });\n        } else {\n            console.log(\"no errors\")\n            let submit = \"error\";\n            if (calorieFormErrors.height == \"\" && calorieFormErrors.age == \"\") {\n                submit = \"\"\n            }\n            setCalorieFormErrors({ ...calorieFormErrors, weight: \"\", submit: submit })\n        }\n    }\n\n    const onHeightChange = (e) => {\n        const height = e.target.value;\n        setCalorieFormInput({ ...calorieFormInput, height: height });\n        if (height == \"\" || height == undefined) {\n            setCalorieFormErrors({ ...calorieFormErrors, height: \"required\", submit: \"error\" });\n        } else if (isNaN(height) || parseInt(height) < 10 || parseInt(height) > 300) {\n            setCalorieFormErrors({ ...calorieFormErrors, height: \"invalidHeight\", submit: \"error\" })\n        } else {\n            let submit = \"error\";\n            if (calorieFormErrors.weight == \"\" && calorieFormErrors.age == \"\") {\n                submit = \"\"\n            }\n            setCalorieFormErrors({ ...calorieFormErrors, height: \"\", submit: submit })\n        }\n    }\n\n    const onClickCalculateCalorie = () => {\n        if (calorieFormErrors.age == \"\" && calorieFormErrors.weight == \"\" && calorieFormErrors.height == \"\") {\n            calculateCalories(userData.username, calorieFormInput).then(calculatedCalorie => {\n                formCallBack({ info: calculatedCalorie })\n            })\n        }\n    }\n\n    return (\n        <div className=\"calculate-calorie-div\">\n            <h2>To know ideal calorie consumption for your body, enter below details and click \"Submit\" button.</h2>\n            <form className=\"calculate-calorie-form\" onSubmit={e => e.preventDefault()}>\n                <table><tbody>\n                    <tr>\n                        <td><label>Age:</label></td>\n                        <td><input type=\"text\" name=\"age\" onChange={onAgeChange} placeholder=\"age\" value={calorieFormInput.age}></input><br /></td>\n                        <td className=\"erros-calculate-calorie-form\">{calorieFormErrors.age === \"required\" && (\n                            <span role=\"error\">Age is required</span>\n                        )}\n                            {calorieFormErrors.age === \"invalidAge\" && (\n                                <span role=\"error\">Age should be between 10 to 200</span>\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td><label> Gender:</label></td>\n                        <td><select onChange={onGenderChange}>\n                            <option value=\"MALE\" selected={calorieFormInput.gender == \"MALE\" ? \"MALE\" : false}>Male</option>\n                            <option value=\"FEMALE\" selected={calorieFormInput.gender == \"FEMALE\" ? \"FEMALE\" : false}>Female</option>\n                        </select><br />\n                        </td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td><label>Current Weight:</label></td>\n                        <td> <input type=\"text\" name=\"weight\" placeholder=\"in Kilogram\" onChange={onWeightChange} value={calorieFormInput.weight}></input><br /></td>\n                        <td className=\"erros-calculatse-calorie-form\"> {calorieFormErrors.weight === \"required\" && (\n                            <span role=\"a\">Weight is required</span>\n                        )}\n                            {calorieFormErrors.weight === \"invalidWeight\" && (\n                                <span role=\"error\">Weight should be should be between 2 to 500</span>\n                            )}</td>\n                    </tr>\n                    <tr>\n                        <td><label>Height:</label></td>\n                        <td><input type=\"text\" name=\"height\" placeholder=\"centimeters\" onChange={onHeightChange} value={calorieFormInput.height}></input><br /></td>\n                        <td className=\"erros-calculate-calorie-form\">{calorieFormErrors.height === \"required\" && (\n                            <span role=\"a\">Height is required</span>\n                        )}\n                            {calorieFormErrors.height === \"invalidHeight\" && (\n                                <span role=\"error\">Height should be between 10 to 300</span>\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td> <button className={calorieFormErrors.submit == \"\" ? \"calculate-calorie-btn\" : \"disable-calorie-btn\"} type=\"submit\" value=\"submit\" disabled={calorieFormErrors.submit == \"\" ? \"\" : \"disabled\"} onClick={onClickCalculateCalorie}>Submit</button></td>\n                        <td ><button className=\"cancel-user-detail-btn\" type=\"submit\" onClick={cancelCallback}>Cancel</button></td>\n                    </tr>\n                </tbody>\n                </table>\n            </form>\n\n        </div >\n    )\n}\n\nexport default CalculateCalorieForm;","import '../css/user-detail-card.css'\n\nfunction UserDetailCard({ userInfo, editCallback }) {\n\n    return (\n        <div className=\"user-detail-cards\">\n            <div className=\"user-detail-card\">\n                <h2>User Detail</h2>\n                <table>\n\n                    <tbody>\n\n                        <tr className=\"user-detail-row\">\n                            <td className=\"user-detail-column\">Age: </td><td className=\"user-detail-column\" >{userInfo.age}</td>\n                        </tr>\n                        <tr className=\"user-detail-row\">\n                            <td className=\"user-detail-column\">Height: </td><td className=\"user-detail-column\" >{userInfo.height}</td>\n                        </tr>\n                        <tr className=\"user-detail-row\">\n                            <td className=\"user-detail-column\">Weight: </td><td className=\"user-detail-column\">{userInfo.weight}</td>\n                        </tr>\n                        <tr className=\"user-detail-row\">\n                            <td className=\"user-detail-column\">Gender: </td><td className=\"user-detail-column\">{userInfo.gender}</td>\n                        </tr>\n                        <tr className=\"user-detail-row\">\n                            <td className=\"user-detail-column\">Calorie Intake: </td><td className=\"user-detail-column\">{userInfo.calorieIntake}</td>\n                        </tr>\n                        <tr>\n                            <td ><button className=\"edit-user-detail-btn\" onClick={editCallback}>Edit</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"calorie-calculation-formula-card\">\n                <h2>Formula for calculating Basal Metabolic Rate(BMR)</h2>\n\n                <br /><br />\n\n                <code>MEN: BMR = 66.5 + (13.75 * weight) + (5.003 * height) - (6.755 * age) </code> <br /> <br />\n\n                <code>WOMEN:  BMR = 665 + (9.563 * weight) + (1.850 * height) - (4.676 * age) </code> <br />\n                <br /><br />\n                <i>** This formula does not account your activity level , Your activity level could change which could fluctuation in your daily calorie intake level</i>\n            </div>\n        </div >\n\n    )\n\n}\n\nexport default UserDetailCard;","import { BrowserRouter as Router, Switch, Link, Route, Redirect } from \"react-router-dom\";\nimport CalculateCalorieForm from \"./CalculateCalorieForm.jsx\";\nimport { useState, useEffect } from 'react';\nimport UserDetailCard from \"./UserDetailCard.jsx\";\nimport '../css/user-info-box.css'\n\n\nfunction UserInfoBox({ userData, updateUserCallback }) {\n\n    const [params, setParams] = useState({ editMode: false, formValid: false })\n\n    const updateUserData = (updatedData) => {\n        setParams({ ...params, editMode: false })\n        updateUserCallback(updatedData)\n    }\n\n    const onCalculate = () => {\n        setParams({ ...params, editMode: true, formValid: false })\n    }\n\n    const editInfo = () => {\n        setParams({ ...params, editMode: true, formValid: true })\n    }\n\n    const cancelAction = () => {\n        setParams({ ...params, editMode: false })\n    }\n\n    return (\n        <div className=\"user-info-main-div\">\n\n            {userData.info && !userData.info.calorieIntake && !params.editMode &&\n                <div className=\"user-info-box-div\">\n                    <h2>\n                        Click below button to know how many calories you should\n                        eat per day to keep your body healthy.\n                    </h2>\n                    <button className=\"calculate-calorie-main-btn\" onClick={onCalculate}>Calculate Calorie Intake</button>\n                </div>\n            }\n\n            {params.editMode && <CalculateCalorieForm userData={userData} formCallBack={updateUserData} cancelCallback={cancelAction} params={params} />}\n\n            {userData.info && userData.info.calorieIntake && !params.editMode && <UserDetailCard userInfo={userData.info} editCallback={editInfo} />}\n\n        </div >\n\n    )\n\n}\n\nexport default UserInfoBox;","import '../css/tips-carousel.css'\n\nfunction TipsCaraousel() {\n\n    return (\n        <div className=\"carrousel\">\n            <input type=\"radio\" name=\"slides\" id=\"radio-1\" defaultChecked />\n            <input type=\"radio\" name=\"slides\" id=\"radio-2\" />\n            <input type=\"radio\" name=\"slides\" id=\"radio-3\" />\n            <input type=\"radio\" name=\"slides\" id=\"radio-4\" />\n            <ul className=\"slides\">\n                <li className=\"slide\">\n                    <p>\n                        <b>Drink Water, Especially Before Meals.</b>\n                    </p>\n                </li>\n                <li className=\"slide\">\n                    <p>\n                        <b>Try Intermittent Fasting.</b>\n\n                    </p>\n                </li>\n                <li className=\"slide\">\n                    <p>\n                        <b>Cut Back on Added Sugar.</b>\n                    </p>\n                </li>\n                <li className=\"slide\">\n                    <p>\n                        <b>Exercise daily for 10-30 minutes.</b>\n                    </p>\n                </li>\n            </ul>\n            <div className=\"slidesNavigation\">\n                <label htmlFor=\"radio-1\" id=\"dotForRadio-1\"></label>\n                <label htmlFor=\"radio-2\" id=\"dotForRadio-2\"></label>\n                <label htmlFor=\"radio-3\" id=\"dotForRadio-3\"></label>\n                <label htmlFor=\"radio-4\" id=\"dotForRadio-4\"></label>\n            </div>\n        </div >\n    )\n\n}\n\nexport default TipsCaraousel","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { endSession } from '../services.js';\nimport ActivityLogBox from \"./ActivityLogBox.jsx\";\nimport '../css/home.css'\nimport UserInfoBox from \"./UserInfoBox.jsx\";\nimport TipsCaraousel from './TipsCaraousel'\n\n\nfunction Home({ userData, setUserData }) {\n\n    const logout = () => {\n        endSession()\n            .then(response => {\n                setUserData({ authenticated: false, username: \"\" })\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n\n    const updateUserData = (updatedData) => {\n        setUserData({ ...userData, info: updatedData.info })\n    }\n\n    const updateActivityData = (updatedData) => {\n        setUserData({ ...userData, info: updatedData })\n    }\n\n    return (\n        <Router>\n            <div>\n\n                <div className=\"home-user-logout-div\">\n                    <div className=\"loggedin-user-div\">\n                        <h2>Welcome, {userData.username}!</h2>\n                    </div>\n                    <div className=\"website-title\">Calorie Manager</div>\n                    <div className=\"logout-btn-div\">\n                        <button className=\"logout-btn\" onClick={logout}> Logout</button>\n                    </div>\n                </div>\n                <div className=\"tip-carousel-header\">\n                    <h2>Tip Of The Day</h2>\n                </div>\n                <TipsCaraousel />\n\n                <UserInfoBox userData={userData} updateUserCallback={updateUserData} />\n\n                <ActivityLogBox userData={userData} updateActivityCallback={updateActivityData} />\n\n\n            </div>\n        </Router >\n\n    );\n}\n\nexport default Home;","import { useState, useEffect } from 'react';\nimport { createSession, checkSession } from '../services.js';\nimport { BrowserRouter as Router, Link, Route, Redirect } from \"react-router-dom\";\nimport '../css/login.css';\n\n\n\nfunction Login({ userData, loginCallBack }) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isDisabled, setIsDisabled] = useState(true);\n    const [loginError, setLoginError] = useState('');\n\n    useEffect(() => {\n        checkSession().then((userInfo) => {\n            console.log(userInfo)\n            if (!userData.authenticated) {\n                loginCallBack({ authenticated: true, username: userInfo.username, info: userInfo.info })\n            }\n        })\n            .catch(error => {\n                console.log(error)\n            });\n    }, [userData]);\n\n    const onUsernameChange = (e) => {\n        setUsername(e.target.value);\n        setIsDisabled(!e.target.value);\n    };\n\n    const onPasswordChange = (e) => {\n        console.log(e.target.value);\n        setPassword(e.target.value);\n\n    }\n\n    const login = () => {\n        createSession({ username, password })\n            .then(userinfo => {\n                loginCallBack({ authenticated: true, username: username, info: userinfo.info })\n            })\n            .catch(err => {\n                setLoginError(err);\n                console.log(err)\n            });\n    };\n\n    if (userData.authenticated) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n\n        <div className=\"login-main-div\">\n            <div className=\"login-image-div\">\n            </div>\n            <h1>Calorie Manager</h1>\n            <div className=\"login-form-div\">\n                <form onSubmit={e => e.preventDefault()}>\n                    <h2>Login</h2>\n                    <label><b>Username</b></label>\n                    <input type=\"text\" onChange={onUsernameChange} placeholder=\"Enter Username\" name=\"username\"></input><br />\n                    <label><b>Password</b></label>\n                    <input type=\"password\" onChange={onPasswordChange} placeholder=\"Enter Password\" name=\"password\"></input><br />\n                    <button className=\"login-btn\" onClick={login} disabled={isDisabled} > Login </button>\n                    <div className=\"login-status-div\">{loginError}\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { endSession, checkSession } from '../services';\n\nfunction PrivateRoute({ isAuthenticated, component: Component, ...rest }) {\n    return (\n\n        <Route {...rest} render={(props) => (\n            isAuthenticated === true\n                ? <Component {...props} />\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: props.location }\n                }} />\n        )} />\n    )\n\n}\nexport default PrivateRoute;","\nimport './App.css';\nimport Home from \"./components/Home\";\nimport Login from './components/Login'\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link, Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './components/PrivateRoute';\nimport {\n  checkSession\n} from './services.js';\n\n\n\nfunction App() {\n\n  const [userData, setUserData] = useState({ authenticated: false, username: '', info: {} })\n\n  useEffect(() => {\n    checkSession().then((userInfo) => {\n      if (!userData.authenticated) {\n        setUserData({ authenticated: true, username: userInfo.username, info: userInfo.info })\n      }\n    })\n      .catch(error => {\n        console.log(error)\n      });\n  }, [userData]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/login\" component={() => <Login userData={userData} loginCallBack={setUserData} />} />\n        <PrivateRoute path=\"/dashboard\" isAuthenticated={userData.authenticated}\n          component={() => <Home userData={userData} setUserData={setUserData} />} />\n        <Route exact path=\"/\">\n          <Redirect exact from=\"/\" to=\"dashboard\" />\n        </Route>\n        <Route path=\"*\">\n          <Redirect from=\"/\" to=\"dashboard\" />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}